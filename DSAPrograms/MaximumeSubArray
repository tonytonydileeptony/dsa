
class Solution {
  public static int MaximumeSubArray(int[] arr){
    int currentMax=0;
    int maxSoFar=arr[0];
    for(int i=0;i<arr.length;i++){
      currentMax+=arr[i];
      if(currentMax>maxSoFar){
        maxSoFar=currentMax;  

      }
      if(currentMax<0){
        currentMax=0;
      }
    }
    return maxSoFar;
  }
  public static void main(String[] args) {
  int[] nums = {-2,1,-3,4,-1,2,1,-5,4};

 System.out.print(MaximumeSubArray(nums));
  }
}














import java.io.*;
import java.util.*;


 

class Solution {
  public static int[] twoSum(int[] arr,int target){
    Map<Integer,Integer>  map=new HashMap<>();
    for(int i=0;i<arr.length;i++){
      int dif=target-arr[i];
      if(map.containsKey(dif)){
        return new int[]{arr[i],dif};
      }
      map.put(arr[i],i);
    }

    return new int[]{1};
  }
  public static void main(String[] args) {
  int[] nums = {2, 7, 11, 15};
  int target =9;  
  int[] arr=twoSum(nums,target);
  for(int a:arr)
  System.out.print(a+" "); 
  }
}

